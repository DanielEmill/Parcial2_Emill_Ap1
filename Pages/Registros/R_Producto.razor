@page "/ProductoR"
@page "/ProductoR/{ProductoId:int}"

@inject ProductosBLL productoBLL
@inject NotificationService notify

<PageTitle>Registro</PageTitle>
<EditForm Model="producto" OnValidSubmit="Guardar">
<DataAnnotationsValidator/>
<div class="card">
    <div class="card-header">
        <h2>Registro de Producto</h2>
    </div>

    <div class="card-body">
        <!--IdProducto-->
        <label class="text-left col-sm-2">IdProducto</label>
        <div class="row">
            <div class="col-2 ">
                <InputNumber class="form-control" @bind-Value="producto.ProductoId" />
                <button type="button" @onclick="Buscar" class="btn btn-primary"> <i class="oi oi-zoom-in"></i>Buscar</button>
            </div> 
        </div>

        <!--Descripcion-->
        <label class="text-left col-sm-3">Descripcion</label>
        <div class="col-sm-6">
            <InputText @bind-Value="producto.Descripcion" class="form-control" placeholder="Ingrese la descripcion"/>
            <ValidationMessage For="@(() => producto.Descripcion)"/>
        </div>

        <!--Precio-->
        <label class="text-left col-sm-2">Precio</label>
        <div class="col-sm-2">
            <InputNumber @bind-Value="producto.Precio" class="form-control" placeholder="Ingrese el precio"/>
            <ValidationMessage For="@(() => producto.Precio)"/>
        </div>

        <!--Costo-->
        <label class="text-left">Costo</label>
        <div class="col-2">
            <InputNumber @bind-Value="producto.Costo" class="form-control" placeholder="Ingrese el costo"/>
            <ValidationMessage For="@(() => producto.Costo)"/>
        </div>

        <!--Existencia-->
        <label class="text-left">Existencia</label>

        <div class="col-sm-2">
            <InputNumber @bind-Value="producto.Existencia" class="form-control" placeholder="Ingrese la Existencia"/>
            <ValidationMessage For="@(() => producto.Existencia)"/>
        </div>

        <ValidationSummary/>

        <!--Botones-->
        <div class="card-footer">
            <div class="btn-group" role="group" aria-label="Basic example">
                <button type="button" class="btn btn-primary" @onclick="Nuevo" ><i class="oi oi-file"></i> Nuevo</button>
                <button type="Submit" class="btn btn-success mr-2"><i class=" oi oi-cloud-download"></i> Guardar</button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar"><i class="oi oi-trash"></i>Eliminar</button>
            </div>
        </div>
    </div>
</div>

</EditForm>

@code {
    [Parameter]
    public int ProductoId{get; set;}
    public Productos producto {get; set;} = new Productos();

    protected override void OnInitialized()
    {
        if(ProductoId > 0){
            producto.ProductoId= ProductoId;
            Buscar();
        }
    }
    void Buscar(){
        var ProductoAencontra = productoBLL.Buscar(producto.ProductoId);
        if(ProductoAencontra != null){
            notify.ShowNotification("Se ha encontrado la busqueda con exito", NotificationSeverity.Info);
            this.producto  = ProductoAencontra;
        }
        else{
            notify.ShowNotification("Ingrese un valor existente", NotificationSeverity.Error);
        }
    }
    void Nuevo(){
        this.producto = new Productos();
    }
    bool validar(){
        if(!String.IsNullOrEmpty(producto.Descripcion)){
            return true;
        }
        return false;
    }
    void Guardar(){
        if(!validar()){
            return;
        }
        if(productoBLL.Guardar(this.producto))
            notify.ShowNotification("Se ha guardado con exito.");
            this.Nuevo();
    }
    void Eliminar(){
        if(productoBLL.Eliminar(producto.ProductoId)){
            notify.ShowNotification("Se ha eliminado con exito", NotificationSeverity.Info);
            Nuevo();
        }
        else{
            notify.ShowNotification("No hay elemento para borrar", NotificationSeverity.Error);
            return;
        }
    }
}